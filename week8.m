%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Неделя 8.
%% Формирующий фильтр.
%% Моделирование динамики матрицы ковариаций в байесовском подходе.
%% Рекуррентный  метод. Векторный случай
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clear; close all;
%% Параметры  %%

mn = 100; %Количество измерений

dt = 1;         %Интервал дискретизации
x_0 = [round(5000+rand*100,1);round(randn*3,1)]; %Начальное значение
P_0 = [10 0;   %Начальная матрица ковариаций
    0 0.1];     
F = [1 dt;      %Матрица динамики
    0 1];
G = [0; round(0.5+rand,1)];%Матрица шумов

Q = 1; %Матрица ковариаций шумов

%Выделение памяти
x = zeros(2,mn); x(:,1) = x_0;
x_ex = zeros(2,mn,5);
P = zeros(2,2,mn); P(:,:,1) = P_0;

%% Моделирование %%
%Мат. ожидание и матрица ковариаций
for i = 2:mn
    x(:,i) = F*x(:,i-1);
    P(:,:,i) = F*P(:,:,i-1)*F'+G*Q*G';
end
%Реализации
for j = 1:5
    x_ex(:,1,j) = x_0+sqrt(P_0)*randn(2,1);
    for i = 2:mn
        x_ex(:,i,j) =F*x_ex(:,i-1,j)+G*randn;
    end
end

%% Графики %%
figure(1); clf;
subplot(2,1,2);
title('Динамика и СКО высоты')
hold on; grid;
h(1) = plot(1:mn,x(1,:),'b');
h(2) = plot(1:mn,3*sqrt(squeeze(P(1,1,:)))+x(1,:)','r');
plot(1:mn,-3*sqrt(squeeze(P(1,1,:)))+x(1,:)','r');
for j = 1:5
    h(3) = plot(1:mn,x_ex(1,:,j),'g');
end
legend(h(:),'Математическое ожидание','3\sigma','Примеры возможных реализаций');

subplot(2,1,1);
title('Динамика и СКО вертикальной скорости')
hold on; grid;
h(1) = plot(1:mn,x(2,:),'b');
h(2) = plot(1:mn,3*sqrt(squeeze(P(2,2,:)))+x(2,:)','r');
plot(1:mn,-3*sqrt(squeeze(P(2,2,:)))+x(2,:)','r');
for j = 1:5
    h(3) = plot(1:mn,x_ex(2,:,j),'g');
end
legend(h(:),'Математическое ожидание','3\sigma','Примеры возможных реализаций');
fprintf('3*СКО > 300 через %f секунд \n',find(3*sqrt(P(1,1,:))>300,1));

%% Запись данных %%
answer = [x(1,end); 3*sqrt(squeeze(P(1,1,end)));find(3*sqrt(P(1,1,:))>300,1)];
fillings = [x_0; G(2)];

save('answer8_2.txt','answer','-ascii');
save('fillings8_2.txt','fillings','-ascii');




