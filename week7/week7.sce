//////////////////////////////////////////////////////
// Неделя 7.
// Комплексная обработка двух измерителей с использованием байесовского подхода.
// Исследование точности с помощью матрицы ковариаций.
// Нерекурсивный метод.
//////////////////////////////////////////////////////
clear; deff('[numd] = roundd(num,n)','numd = round(num *10^n) / 10^n');
// Параметры  //

mn = 50; //Количество измерений

h0_var = roundd(10+rand(1,'uin')*3,1); //Начальная дисперсия оценки высоты //Для заполнения
V_var = roundd(5+rand(1,'uin')*2,1); //Начальная дисперсия оценки скорости //Для заполнения

h0 = 1000+sqrt(h0_var)*rand(1,'nor');  //истинное значение величины
V = sqrt(V_var)*rand(1,'nor');         //истинное значение величины

//Дисперсия измерителей
SNS_var = abs(roundd(2+rand(1,'nor'),2));    //Для заполнения
BA_var = abs(roundd(4+rand(1,'nor'),2));    //Для заполнения

//// Моделирование истинного значения и измерений ////
h = (h0+V*(0:mn-1))';
y_sns = h+sqrt(SNS_var)*rand(mn,1,'nor');
y_ba = h+sqrt(BA_var)*rand(mn,1,'nor');


//// Оценивание ////
h0_exp = 1000;  //Априорное математическое ожидание 
V_exp = 0;      //Априорное математическое ожидание 
x0 = [h0_exp; V_exp];
P_x = [h0_var 0; 0 V_var]; //Начальная матрица ковариаций х

//Выделение памяти
P = zeros(2,2,mn);
P_ba = zeros(2,2,mn);
x_est = zeros(2,mn);

for i = 1:mn
//Формирование матрицы наблюдения
H = ones(i,2); 
H(:,2) = [0:i-1]';

// Расчет матрицы ковариаций //
R_sns = eye(i,i)*SNS_var; //Матрица ковариаций ошибок снс
R_ba = eye(i,i)*BA_var;  //Матрица ковариаций ошибок баровысотомера
P(:,:,i) = (P_x^-1 + H'*R_sns^-1*H+H'*R_ba^-1*H)^-1; //Матрица ковариаций ошибкок оценивания
P_ba(:,:,i) = (P_x^-1 + H'*R_ba^-1*H)^-1; //Матрица ковариаций ошибкок оценивания при отсутствии измерений SNS

//Оценка
x_est(:,i) = x0+P(:,:,i)*(H'*R_sns^-1*(y_sns(1:i)-H*x0)+H'*R_ba^-1*(y_ba(1:i)-H*x0));
end

//Рассчетные СКО оценивания для полного набора измерений
h_f_sko = squeeze(sqrt(P(1,1,1:mn)));
v_f_sko = squeeze(sqrt(P(2,2,1:mn)));

//Рассчетные СКО оценивания при отсутствии SNS
h_b_sko = squeeze(sqrt(P_ba(1,1,1:mn)));
v_b_sko = squeeze(sqrt(P_ba(2,2,1:mn)));

//Действительные ошибки оценивания
h_est_err = x_est(1,:)-h0;
V_est_err = x_est(2,:)-V;

//// Графики ////
figure(1); clf;
subplot(2,1,1);
title('3 sigma ошибки оценки начальной высоты')
set(gca(),"auto_clear","off"); xgrid(1,0.1,10); xlabel('№ измерения'); ylabel('м');
plot(1:mn,3*h_f_sko','b',1:mn, 3*h_b_sko','r',1:mn,h_est_err,'g',1:mn,-3*h_f_sko','b',1:mn,-3*h_b_sko','r');

legend('3 sigma высоты с СНС','3 sigma высоты без СНС','Действительная ошибка')

subplot(2,1,2);
title('3 sigma ошибки оценки вертикальной скорости')
set(gca(),"auto_clear","off"); xgrid(1,0.1,10); xlabel('№ измерения'); ylabel('м/с');
plot(1:mn,3*v_f_sko','b',1:mn,3*v_b_sko','r',1:mn,V_est_err,'g',1:mn,-3*v_f_sko','b',1:mn,-3*v_b_sko','r');
legend('3 sigma скорости с СНС','3 sigma скорости без СНС','Действительная ошибка')

mprintf('Истинное значение высоты: %f, вертикальной скорости: %f \n',h0, V);
mprintf('Оценка высоты: %f, вертикальной скорости: %f \n',x_est(1,$), x_est(2,$));
mprintf('Матрица ковариаций ошибок оцениивания после %g измерений:',mn);
disp(P(:,:,mn));

mprintf('3 сигма высоты после %g измерений: %g \n',mn,3*h_f_sko(mn));
mprintf('3 сигма вертикальной скорости с СНС после %g измерений: %g \n',mn, 3*v_f_sko(mn));
mprintf('3 сигма вертикальной скорости без СНС после %g измерений: %g \n',mn, 3*v_b_sko(mn));

//// Запись данных ////
deletefile('data.txt'); deletefile('fillings.txt'); deletefile('answer.txt');
data = [y_sns, y_ba];
answer = [x_est(1,$); x_est(2,$); 3*h_f_sko(20); 3*v_b_sko(30)];
fillings = [h0_var; V_var; SNS_var; BA_var];

write('data.txt',data);
write('answer.txt',answer);
write('fillings.txt',fillings);
